true: #True{}
false: #False{}

abort: {
  msg: "Reached a fatal error. Aborting." Print.
  `! !.
}

if: {condition then else |
  condition
    True? [then!.]
    False? [else!.].
}

map: {fn it|
  it
    Done? [#Done{}]
    NotDone? [it| #NotDone {Value[fn! (it Value).] Next[`! ! fn it: (it Next).]}] .
}

fold_left: {fn acc it|
  it
    Done? [acc]
                :W
    NotDone? [it| `! ! fn acc: (fn! acc next: (it Value)) it: (it Next).] .
}

list: {
  Data[#Empty{}]
  Prepend[elem|
    new_data: #NotEmpty { Front[elem] Rest[`Prepend Data.] }
    {`Prepend Data[new_data]}
  ]

  It [
    `It Data.
      Empty? [#Done{}]
      NotEmpty? [val |
        #NotDone { Value[val Front.] Next[{`It Data[val Rest.]} It.] }
      ].
  ]
}

lst: list Prepend 5. Prepend 4. Prepend 3. Prepend 2. Prepend 1.
it: map! {x| x + 1.} it: (lst It).
{}
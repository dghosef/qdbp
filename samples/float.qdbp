(* Compile time typecheck to see that a and b!. have the same type. 
  returns a
*)
unify := {that with| 
  (#True{})
    True? [that]
    False? [with!.].
}
is_float := {that|
  unify! that with: {$qdbp_zero_float()}.
}
{ that|
  {
    Val[
      unify! that with: {$qdbp_zero_float()}.
    ]
    AsString[
      @string! $qdbp_float_to_string(this Val.).
    ]
    Print[
      this AsString. Print.
    ]
    +[that|
      new_val := $qdbp_float_add_float(this Val. is_float! (that Val).)
      {this Val[new_val]}
    ]
    -[that|
      new_val := $qdbp_float_sub_float(this Val. is_float! (that Val).)
      {this Val[new_val]}
    ]
    *[that|
      new_val := $qdbp_float_mul_float(this Val. is_float! (that Val).)
      {this Val[new_val]}
    ]
    /[that|
      new_val := $qdbp_float_div_float(this Val. is_float! (that Val).)
      {this Val[new_val]}
    ]
    =[that|
      $qdbp_float_eq_bool(this Val. is_float! (that Val).)
    ]
    !=[that|
      $qdbp_float_ne_bool(this Val. is_float! (that Val).)
    ]
    <[that|
      $qdbp_float_lt_bool(this Val. is_float! (that Val).)
    ]
    >[that|
      $qdbp_float_gt_bool(this Val. is_float! (that Val).)
    ]
    <=[that|
      $qdbp_float_le_bool(this Val. is_float! (that Val).)
    ]
    >=[that|
      $qdbp_float_ge_bool(this Val. is_float! (that Val).)
    ]
  }
}